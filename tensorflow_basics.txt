clear
import tensorflow as tf
print(tf.__version__)
hello = tf.constant("Hello ")
world = tf.constant("World")
type(hello)
hello?
clear
print(hello)
with tf.Session() as sess:
    result = sess.run(hello+world)
print(result)
a = tf.constant(10)
b = tf.constant(20)
type(a)
a+b
a+b
a+b
with tf.Session as sess:
    result = sess.run(a+b)
clear
a = tf.constant(10)
b = tf.constant(20)
a + b
with tf.Session() as sess:
    result = sess.run(a + b)
result
print(result)
const = tf.constant(10)
fill_mat = tf.fill?
fill_mat = tf.fill((4,4),10)
fill_mat
myzeros = tf.zeros((4,4))
myones = tf.ones((4,4))
myrandn = tf.random_normal?
myrandn = tf.random_normal((4,4), mean=0,stdev=1.0)
myrandn = tf.random_normal((4,4), mean=0,stddev=1.0)
myrandu = tf.random_uniform((4,4))?
myrandu = tf.random_uniform?
myrandu = tf.random_uniform((4,4), minval=0, maxval=1)
my_ops = [const, fill_mat, myzeros, myones, myrandn, myrandu]
sess = tf.InteractiveSession()
for op in my_ops:
    results = sess.run(op)
results
for op in my_ops:
    print(sess.run(op))
    print('\n')
a = tf.constant([ [1,2],
                  [3.4]  ])
a = tf.constant([ [1,2],
                  [3,4]  ])
a.get_shape()
b = tf.constant([ [10] , [100] ])
b.get_shape()
result = tf.matmul(a,b)
sess.run(result)
result.eval()
a = tf.constant([[1,2],[3,4]])
a
a.shape
%history -f tensorflow_basics.txt
